
a.out:     file format elf32-littlearm
a.out


Disassembly of section .interp:

00008154 <.interp>:
    8154:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8158:	2d646c2f 	stclcs	12, cr6, [r4, #-188]!	; 0xffffff44
    815c:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0x96c
    8160:	6f732e78 	svcvs	0x00732e78
    8164:	Address 0x0000000000008164 is out of bounds.


Disassembly of section .note.ABI-tag:

00008168 <.note.ABI-tag>:
    8168:	00000004 	andeq	r0, r0, r4
    816c:	00000010 	andeq	r0, r0, r0, lsl r0
    8170:	00000001 	andeq	r0, r0, r1
    8174:	00554e47 	subseq	r4, r5, r7, asr #28
    8178:	00000000 	andeq	r0, r0, r0
    817c:	00000002 	andeq	r0, r0, r2
    8180:	00000006 	andeq	r0, r0, r6
    8184:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .note.gnu.build-id:

00008188 <.note.gnu.build-id>:
    8188:	00000004 	andeq	r0, r0, r4
    818c:	00000014 	andeq	r0, r0, r4, lsl r0
    8190:	00000003 	andeq	r0, r0, r3
    8194:	00554e47 	subseq	r4, r5, r7, asr #28
    8198:	12f88730 	rscsne	r8, r8, #12582912	; 0xc00000
    819c:	6b6b9d18 	blvs	1aef604 <__bss_end__+0x1ade5dc>
    81a0:	90ce9600 	sbcls	r9, lr, r0, lsl #12
    81a4:	f2956d83 	vqdmull.s16	q3, d21, d3
    81a8:	6b71938f 	blvs	1c6cfec <__bss_end__+0x1c5bfc4>

Disassembly of section .gnu.hash:

000081ac <.gnu.hash>:
    81ac:	00000002 	andeq	r0, r0, r2
    81b0:	00000002 	andeq	r0, r0, r2
    81b4:	00000001 	andeq	r0, r0, r1
    81b8:	00000005 	andeq	r0, r0, r5
    81bc:	20024800 	andcs	r4, r2, r0, lsl #16
    81c0:	00000002 	andeq	r0, r0, r2
    81c4:	00000003 	andeq	r0, r0, r3
    81c8:	f63d4e2f 			; <UNDEFINED> instruction: 0xf63d4e2f
    81cc:	0f11ed7d 	svceq	0x0011ed7d

Disassembly of section .dynsym:

000081d0 <.dynsym>:
	...
    81e0:	00000001 	andeq	r0, r0, r1
	...
    81ec:	00000020 	andeq	r0, r0, r0, lsr #32
    81f0:	00000020 	andeq	r0, r0, r0, lsr #32
    81f4:	000082b4 			; <UNDEFINED> instruction: 0x000082b4
    81f8:	00000000 	andeq	r0, r0, r0
    81fc:	00000012 	andeq	r0, r0, r2, lsl r0
    8200:	0000001a 	andeq	r0, r0, sl, lsl r0
    8204:	000082d0 	ldrdeq	r8, [r0], -r0
    8208:	00000000 	andeq	r0, r0, r0
    820c:	00000012 	andeq	r0, r0, r2, lsl r0

Disassembly of section .dynstr:

00008210 <.dynstr>:
    8210:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
    8214:	5f6e6f6d 	svcpl	0x006e6f6d
    8218:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    821c:	005f5f74 	subseq	r5, pc, r4, ror pc	; <UNPREDICTABLE>
    8220:	6362696c 	cmnvs	r2, #1769472	; 0x1b0000
    8224:	2e6f732e 	cdpcs	3, 6, cr7, cr15, cr14, {1}
    8228:	62610036 	rsbvs	r0, r1, #54	; 0x36
    822c:	0074726f 	rsbseq	r7, r4, pc, ror #4
    8230:	696c5f5f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    8234:	735f6362 	cmpvc	pc, #-2013265919	; 0x88000001
    8238:	74726174 	ldrbtvc	r6, [r2], #-372	; 0x174
    823c:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    8240:	4c47006e 	mcrrmi	0, 6, r0, r7, cr14
    8244:	5f434249 	svcpl	0x00434249
    8248:	00342e32 	eorseq	r2, r4, r2, lsr lr

Disassembly of section .gnu.version:

0000824c <.gnu.version>:
    824c:	00000000 	andeq	r0, r0, r0
    8250:	00020002 	andeq	r0, r2, r2

Disassembly of section .gnu.version_r:

00008254 <.gnu.version_r>:
    8254:	00010001 	andeq	r0, r1, r1
    8258:	00000010 	andeq	r0, r0, r0, lsl r0
    825c:	00000010 	andeq	r0, r0, r0, lsl r0
    8260:	00000000 	andeq	r0, r0, r0
    8264:	0d696914 	stcleq	9, cr6, [r9, #-80]!	; 0xffffffb0
    8268:	00020000 	andeq	r0, r2, r0
    826c:	00000032 	andeq	r0, r0, r2, lsr r0
    8270:	00000000 	andeq	r0, r0, r0

Disassembly of section .rel.dyn:

00008274 <.rel.dyn>:
    8274:	00011018 	andeq	r1, r1, r8, lsl r0
    8278:	00000115 	andeq	r0, r0, r5, lsl r1

Disassembly of section .rel.plt:

0000827c <.rel.plt>:
    827c:	0001100c 	andeq	r1, r1, ip
    8280:	00000216 	andeq	r0, r0, r6, lsl r2
    8284:	00011010 	andeq	r1, r1, r0, lsl r0
    8288:	00000116 	andeq	r0, r0, r6, lsl r1
    828c:	00011014 	andeq	r1, r1, r4, lsl r0
    8290:	00000316 	andeq	r0, r0, r6, lsl r3

Disassembly of section .init:

00008294 <_init>:
_init():
    8294:	b508      	push	{r3, lr}
    8296:	f000 f841 	bl	831c <call_gmon_start>
    829a:	bf00      	nop
    829c:	bd08      	pop	{r3, pc}

Disassembly of section .plt:

000082a0 <.plt>:
    82a0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    82a4:	e59fe004 	ldr	lr, [pc, #4]	; 82b0 <_init+0x1c>
    82a8:	e08fe00e 	add	lr, pc, lr
    82ac:	e5bef008 	ldr	pc, [lr, #8]!
    82b0:	00008d50 	andeq	r8, r0, r0, asr sp
    82b4:	e28fc600 	add	ip, pc, #0
    82b8:	e28cca08 	add	ip, ip, #32768	; 0x8000
    82bc:	e5bcfd50 	ldr	pc, [ip, #3408]!	; 0xd50
    82c0:	4778      	bx	pc
    82c2:	46c0      	nop			; (mov r8, r8)
    82c4:	e28fc600 	add	ip, pc, #0
    82c8:	e28cca08 	add	ip, ip, #32768	; 0x8000
    82cc:	e5bcfd44 	ldr	pc, [ip, #3396]!	; 0xd44
    82d0:	e28fc600 	add	ip, pc, #0
    82d4:	e28cca08 	add	ip, ip, #32768	; 0x8000
    82d8:	e5bcfd3c 	ldr	pc, [ip, #3388]!	; 0xd3c

Disassembly of section .text:

000082dc <main>:
main():
    82dc:	f641 70f8 	movw	r0, #8184	; 0x1ff8
    82e0:	4770      	bx	lr
    82e2:	bf00      	nop

000082e4 <_start>:
_start():
    82e4:	f04f 0b00 	mov.w	fp, #0
    82e8:	f04f 0e00 	mov.w	lr, #0
    82ec:	f85d 1b04 	ldr.w	r1, [sp], #4
    82f0:	466a      	mov	r2, sp
    82f2:	f84d 2d04 	str.w	r2, [sp, #-4]!
    82f6:	f84d 0d04 	str.w	r0, [sp, #-4]!
    82fa:	f8df c014 	ldr.w	ip, [pc, #20]	; 8310 <_start+0x2c>
    82fe:	f84d cd04 	str.w	ip, [sp, #-4]!
    8302:	4804      	ldr	r0, [pc, #16]	; (8314 <_start+0x30>)
    8304:	4b04      	ldr	r3, [pc, #16]	; (8318 <_start+0x34>)
    8306:	f7ff efd6 	blx	82b4 <_init+0x20>
    830a:	f7ff efe2 	blx	82d0 <_init+0x3c>
    830e:	83a10000 			; <UNDEFINED> instruction: 0x83a10000
    8312:	82dd0000 	sbcshi	r0, sp, #0
    8316:	835d0000 	cmphi	sp, #0
	...

0000831c <call_gmon_start>:
call_gmon_start():
    831c:	4b03      	ldr	r3, [pc, #12]	; (832c <call_gmon_start+0x10>)
    831e:	4a04      	ldr	r2, [pc, #16]	; (8330 <call_gmon_start+0x14>)
    8320:	447b      	add	r3, pc
    8322:	589b      	ldr	r3, [r3, r2]
    8324:	b10b      	cbz	r3, 832a <call_gmon_start+0xe>
    8326:	f7ff bfcb 	b.w	82c0 <_init+0x2c>
    832a:	4770      	bx	lr
    832c:	00008cdc 	ldrdeq	r8, [r0], -ip
    8330:	00000018 	andeq	r0, r0, r8, lsl r0

00008334 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    8334:	4b02      	ldr	r3, [pc, #8]	; (8340 <__do_global_dtors_aux+0xc>)
    8336:	781a      	ldrb	r2, [r3, #0]
    8338:	b90a      	cbnz	r2, 833e <__do_global_dtors_aux+0xa>
    833a:	2201      	movs	r2, #1
    833c:	701a      	strb	r2, [r3, #0]
    833e:	4770      	bx	lr
    8340:	00011024 	andeq	r1, r1, r4, lsr #32

00008344 <frame_dummy>:
frame_dummy():
    8344:	4803      	ldr	r0, [pc, #12]	; (8354 <frame_dummy+0x10>)
    8346:	b508      	push	{r3, lr}
    8348:	6803      	ldr	r3, [r0, #0]
    834a:	b113      	cbz	r3, 8352 <frame_dummy+0xe>
    834c:	4b02      	ldr	r3, [pc, #8]	; (8358 <frame_dummy+0x14>)
    834e:	b103      	cbz	r3, 8352 <frame_dummy+0xe>
    8350:	4798      	blx	r3
    8352:	bd08      	pop	{r3, pc}
    8354:	00010f14 	andeq	r0, r1, r4, lsl pc
    8358:	00000000 	andeq	r0, r0, r0

0000835c <__libc_csu_init>:
__libc_csu_init():
    835c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8360:	4606      	mov	r6, r0
    8362:	4d0d      	ldr	r5, [pc, #52]	; (8398 <__libc_csu_init+0x3c>)
    8364:	460f      	mov	r7, r1
    8366:	f8df 9034 	ldr.w	r9, [pc, #52]	; 839c <__libc_csu_init+0x40>
    836a:	4690      	mov	r8, r2
    836c:	447d      	add	r5, pc
    836e:	f7ff ff91 	bl	8294 <_init>
    8372:	44f9      	add	r9, pc
    8374:	ebc5 0909 	rsb	r9, r5, r9
    8378:	ea5f 09a9 	movs.w	r9, r9, asr #2
    837c:	d00a      	beq.n	8394 <__libc_csu_init+0x38>
    837e:	3d04      	subs	r5, #4
    8380:	2400      	movs	r4, #0
    8382:	f855 3f04 	ldr.w	r3, [r5, #4]!
    8386:	4630      	mov	r0, r6
    8388:	4639      	mov	r1, r7
    838a:	4642      	mov	r2, r8
    838c:	3401      	adds	r4, #1
    838e:	4798      	blx	r3
    8390:	454c      	cmp	r4, r9
    8392:	d1f6      	bne.n	8382 <__libc_csu_init+0x26>
    8394:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8398:	00008b9c 	muleq	r0, ip, fp
    839c:	00008b9a 	muleq	r0, sl, fp

000083a0 <__libc_csu_fini>:
__libc_csu_fini():
    83a0:	4770      	bx	lr
    83a2:	bf00      	nop

Disassembly of section .fini:

000083a4 <_fini>:
_fini():
    83a4:	b508      	push	{r3, lr}
    83a6:	bf00      	nop
    83a8:	bd08      	pop	{r3, pc}

Disassembly of section .rodata:

000083ac <_IO_stdin_used>:
    83ac:	00020001 	andeq	r0, r2, r1

Disassembly of section .ARM.exidx:

000083b0 <.ARM.exidx>:
    83b0:	7fffff34 	svcvc	0x00ffff34
    83b4:	00000001 	andeq	r0, r0, r1

Disassembly of section .eh_frame:

000083b8 <__FRAME_END__>:
    83b8:	00000000 	andeq	r0, r0, r0

Disassembly of section .init_array:

00010f0c <__frame_dummy_init_array_entry>:
__init_array_start():
   10f0c:	00008345 	andeq	r8, r0, r5, asr #6

Disassembly of section .fini_array:

00010f10 <__do_global_dtors_aux_fini_array_entry>:
   10f10:	00008335 	andeq	r8, r0, r5, lsr r3

Disassembly of section .jcr:

00010f14 <__JCR_END__>:
   10f14:	00000000 	andeq	r0, r0, r0

Disassembly of section .dynamic:

00010f18 <_DYNAMIC>:
   10f18:	00000001 	andeq	r0, r0, r1
   10f1c:	00000010 	andeq	r0, r0, r0, lsl r0
   10f20:	0000000c 	andeq	r0, r0, ip
   10f24:	00008295 	muleq	r0, r5, r2
   10f28:	0000000d 	andeq	r0, r0, sp
   10f2c:	000083a5 	andeq	r8, r0, r5, lsr #7
   10f30:	00000019 	andeq	r0, r0, r9, lsl r0
   10f34:	00010f0c 	andeq	r0, r1, ip, lsl #30
   10f38:	0000001b 	andeq	r0, r0, fp, lsl r0
   10f3c:	00000004 	andeq	r0, r0, r4
   10f40:	0000001a 	andeq	r0, r0, sl, lsl r0
   10f44:	00010f10 	andeq	r0, r1, r0, lsl pc
   10f48:	0000001c 	andeq	r0, r0, ip, lsl r0
   10f4c:	00000004 	andeq	r0, r0, r4
   10f50:	6ffffef5 	svcvs	0x00fffef5
   10f54:	000081ac 	andeq	r8, r0, ip, lsr #3
   10f58:	00000005 	andeq	r0, r0, r5
   10f5c:	00008210 	andeq	r8, r0, r0, lsl r2
   10f60:	00000006 	andeq	r0, r0, r6
   10f64:	000081d0 	ldrdeq	r8, [r0], -r0
   10f68:	0000000a 	andeq	r0, r0, sl
   10f6c:	0000003c 	andeq	r0, r0, ip, lsr r0
   10f70:	0000000b 	andeq	r0, r0, fp
   10f74:	00000010 	andeq	r0, r0, r0, lsl r0
   10f78:	00000015 	andeq	r0, r0, r5, lsl r0
   10f7c:	00000000 	andeq	r0, r0, r0
   10f80:	00000003 	andeq	r0, r0, r3
   10f84:	00011000 	andeq	r1, r1, r0
   10f88:	00000002 	andeq	r0, r0, r2
   10f8c:	00000018 	andeq	r0, r0, r8, lsl r0
   10f90:	00000014 	andeq	r0, r0, r4, lsl r0
   10f94:	00000011 	andeq	r0, r0, r1, lsl r0
   10f98:	00000017 	andeq	r0, r0, r7, lsl r0
   10f9c:	0000827c 	andeq	r8, r0, ip, ror r2
   10fa0:	00000011 	andeq	r0, r0, r1, lsl r0
   10fa4:	00008274 	andeq	r8, r0, r4, ror r2
   10fa8:	00000012 	andeq	r0, r0, r2, lsl r0
   10fac:	00000008 	andeq	r0, r0, r8
   10fb0:	00000013 	andeq	r0, r0, r3, lsl r0
   10fb4:	00000008 	andeq	r0, r0, r8
   10fb8:	6ffffffe 	svcvs	0x00fffffe
   10fbc:	00008254 	andeq	r8, r0, r4, asr r2
   10fc0:	6fffffff 	svcvs	0x00ffffff
   10fc4:	00000001 	andeq	r0, r0, r1
   10fc8:	6ffffff0 	svcvs	0x00fffff0
   10fcc:	0000824c 	andeq	r8, r0, ip, asr #4
	...

Disassembly of section .got:

00011000 <_GLOBAL_OFFSET_TABLE_>:
   11000:	00010f18 	andeq	r0, r1, r8, lsl pc
	...
   1100c:	000082a0 	andeq	r8, r0, r0, lsr #5
   11010:	000082a0 	andeq	r8, r0, r0, lsr #5
   11014:	000082a0 	andeq	r8, r0, r0, lsr #5
   11018:	00000000 	andeq	r0, r0, r0

Disassembly of section .data:

0001101c <__data_start>:
__data_start():
   1101c:	00000000 	andeq	r0, r0, r0

00011020 <__dso_handle>:
   11020:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss:

00011024 <completed.6152>:
   11024:	00000000 	andeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__bss_end__+0x10bfcfc>
   4:	62552820 	subsvs	r2, r5, #2097152	; 0x200000
   8:	75746e75 	ldrbvc	r6, [r4, #-3701]!	; 0xe75
   c:	6e694c2f 	cdpvs	12, 6, cr4, cr9, cr15, {1}
  10:	206f7261 	rsbcs	r7, pc, r1, ror #4
  14:	2e362e34 	mrccs	14, 1, r2, cr6, cr4, {1}
  18:	75312d33 	ldrvc	r2, [r1, #-3379]!	; 0xd33
  1c:	746e7562 	strbtvc	r7, [lr], #-1378	; 0x562
  20:	20293575 	eorcs	r3, r9, r5, ror r5
  24:	2e362e34 	mrccs	14, 1, r2, cr6, cr4, {1}
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	412d3705 	teqmi	sp, r5, lsl #14
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	12040a02 	andne	r0, r4, #8192	; 0x2000
  20:	15011404 	strne	r1, [r1, #-1028]	; 0x404
  24:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  28:	1a011901 	bne	46434 <__bss_end__+0x3540c>
  2c:	22031b02 	andcs	r1, r3, #2048	; 0x800
  30:	Address 0x0000000000000030 is out of bounds.

